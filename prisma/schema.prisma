generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id               Int         @id @default(autoincrement())
  name             String
  email            String      @unique
  walletAddress    String?     @unique
  x                String?
  instagram        String?
  requestsSent     Request[]   @relation("UserSentRequests")
  requestsReceived Request[]   @relation("UserReceivedRequests")
  EventUsers       EventUser[]
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
}

model Request {
  id           Int           @id @default(autoincrement())
  user         User          @relation("UserSentRequests", fields: [userId], references: [id])
  userId       Int
  targetUser   User          @relation("UserReceivedRequests", fields: [targetUserId], references: [id])
  targetUserId Int
  event        Event         @relation(fields: [eventId], references: [id])
  eventId      Int
  status       RequestStatus @default(PENDING)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Event {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  creator   String
  users     EventUser[]
  requests  Request[]
  slug      String      @unique
  date      String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model EventUser {
  userId  Int
  eventId Int
  User    User  @relation(fields: [userId], references: [id])
  Event   Event @relation(fields: [eventId], references: [id])

  @@id([userId, eventId])
}

enum RequestStatus {
  PENDING
  ACCEPTED
  REJECTED
}
